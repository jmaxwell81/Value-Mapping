<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function() {
	/* widget controller */
	var c = this;
	c.data.loaded = false;
	c.data.playing = false;
	c.data.animateClicked = false;
	
	//build network based on account selection
	$rootScope.$on("AVMAccountSelected", function(evt, results){

		c.data.selected = [];
		
		//set loading parameter
		c.data.loading = true;
		c.data.loaded = false;

		//set selected account id
		c.data.acc_id = results.sys_id;
		c.data.acc_name = results.name;
		
		c.server.update().then(function(){
			c.data.loading = false;
			c.data.loaded = true;
		});
	})

	// ng-sortable clone means cannot reorder
	c.availableAs = {
		itemMoved: function (event) {
			event.source.itemScope.item.used = true;
		},
		clone: true // clone this side
	}

	c.selectedAs = {
		itemMoved: function (event) {
			// moved back to available
			var item = event.source.itemScope.item;
			moveToAvailable(item);
			removeItem(c.data.all, item);
		},
		dragStart: function () {
			c.availableAs.clone = false;
		},
		dragEnd: function () {
			c.availableAs.clone = true;
		}
	}

	// double moves from Available to Selected
	c.onDblClick = function(item) {
		var t = angular.copy(item);
		item.used = true; // original is now used
		c.data.selected.push(t);
	}

	// double on selected removes and unsets Available used
	c.onSelDblClick = function(item) {
		moveToAvailable(item);
		removeItem(c.data.selected, item);
	}

	function removeItem(array, item) {
		var n = array.indexOf(item);
		if (n !== -1)
			array.splice(n, 1);		
	}

	function moveToAvailable(item) {
		var t = item.sys_id.value;
		angular.forEach(c.data.all, function(target) {
			if (target.sys_id.value == t)
				target.used = false;
		})		
	}
	
	c.clear = function(){
		c.data.selected = [];
		c.server.update();
		c.data.animateClicked = false;
	}
	
	c.animate = function(){
		if (c.data.selected.length > 0){
			$rootScope.$broadcast("AVMNodeAnimation", c.data.selected);
			c.data.animateClicked = true;
		}
	}
	
	c.playPause = function(){
		if (c.data.playing == false)
			c.data.playing = true;
		else
			c.data.playing = false;
		
		$rootScope.$broadcast("AVMNodeAnimationPlayPause");
	}
	
	c.next = function(){
		$rootScope.$broadcast("AVMNodeAnimationNext");
	}
	
	c.previous = function(){
		$rootScope.$broadcast("AVMNodeAnimationPrevious");
	}
	
	c.refresh = function(){
		c.animate();
	}
	
	c.fit = function(){
		$rootScope.$broadcast("AVMNodeAnimationFit");
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.as-sortable-placeholder {
  background-color: #eee;
}

.slush-scrollable {
  height: 240px;
  overflow-y: scroll;
  overflow-x: hidden;
}

.panel  &gt; .list-group:last-child .list-group-item:last-child {
	border-bottom-width: 1px;
  border-bottom-style: solid;
  border-radius: 0;
}

.used {
	max-height: 0;
  overflow: hidden;
  padding: 0;
  border: none;
}

.available &gt; .list-group-item {
	transition: all 1s;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>avm_animation</id>
        <internal>false</internal>
        <link/>
        <name>AVM Animation</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	if (input){
		data.user = gs.getUserName();
		data.all = [];
		var gr = new GlideRecord('x_snc_acc_val_map_nodes');
		gr.addQuery('u_account', input.acc_id);
		gr.orderBy('label');
		gr.query();
	
		while (gr.next()) {
			var t = {};
			$sp.getRecordElements(t, gr, 'label,sys_id');
			data.all.push(t);
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-12-06 11:08:18</sys_created_on>
        <sys_id>65259c9cdb1ee700a650789eaf9619de</sys_id>
        <sys_mod_count>209</sys_mod_count>
        <sys_name>AVM Animation</sys_name>
        <sys_package display_value="Account Value Mapping" source="x_snc_acc_val_map">49168e13db271340a650789eaf96198b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Account Value Mapping">49168e13db271340a650789eaf96198b</sys_scope>
        <sys_update_name>sp_widget_65259c9cdb1ee700a650789eaf9619de</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-12-12 13:33:10</sys_updated_on>
        <template><![CDATA[<span ng-if="c.data.loading"><i  class="fa fa-spinner fa-spin fa-3x fa-fw"></i>
  <span>Loading...</span></span>
<div ng-if="c.data.loaded">
  <h4>Node Animation</h4>
  <div class="col-sm-6">
    <div class="panel panel-default">
      <div class="panel-heading">
        <h4 class="panel-title">${Available}</h4>
      </div>
      <div class="available list-group slush-scrollable" 
           as-sortable="c.availableAs" 
           ng-model="c.data.all">
        <div ng-repeat="item in c.data.all | filter:c.search" 
             as-sortable-item 
             ng-dblclick="c.onDblClick(item)"
             ng-class="{used: item.used}"
             class="list-group-item">
          <div as-sortable-item-handle>
            <i class="sp-drag-dots" style="position:relative; top: 3px; right: 5px;" />
            <span>{{item.label.display_value}}</span>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="col-sm-6">
    <div class="panel panel-default">
      <div class="panel-heading">
        <h4 class="panel-title">${Selected}</h4>
      </div>
      <div class="list-group slush-scrollable" as-sortable="c.selectedAs" ng-model="c.data.selected">
        <div ng-repeat="item in c.data.selected" 
             as-sortable-item
             ng-dblclick="c.onSelDblClick(item)"
             class="list-group-item">
          <div as-sortable-item-handle>
            <i class="sp-drag-dots" style="position:relative; top: 3px; right: 5px;" />
            <span>{{item.label.display_value}}</span>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="col-sm-12" style="margin-top:10px;">
    <button ng-if="c.data.selected.length > 0" ng-click="c.clear()" class="btn btn-default fa fa-eraser"></button>
    <button ng-if="c.data.selected.length > 0 && c.data.animateClicked" ng-click="c.refresh()" class="btn btn-default fa fa-refresh"></button>
    <button ng-if="!c.data.playing && c.data.animateClicked" ng-click="c.fit()" class="btn btn-default fa fa-arrows-alt"></button>
    
    <button ng-if="!c.data.animateClicked" ng-click="c.animate()" class="btn btn-primary pull-right">${Animate}</button>
    
    <button ng-if="!c.data.playing && c.data.animateClicked" ng-click="c.next()" class="btn btn-default fa fa-chevron-right pull-right"></button>
    <button ng-if="!c.data.playing && c.data.animateClicked" ng-click="c.playPause()" class="btn btn-default fa fa-play pull-right"></button>
    <button ng-if="c.data.playing && c.data.animateClicked" ng-click="c.playPause()" class="btn btn-default fa fa-pause pull-right"></button>
    <button ng-if="!c.data.playing && c.data.animateClicked" ng-click="c.previous()" class="btn btn-default fa fa-chevron-left pull-right"></button>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
